# Maintainer: The Linux Geek <jcjordyn130>

pkgbase=systemd
pkgname=('systemd-mini' 'libsystemd-mini' 'systemd-sysvcompat-mini')
pkgver=231
pkgrel=1
arch=('i686' 'x86_64')
url="http://www.freedesktop.org/wiki/Software/systemd"
makedepends=('acl' 'cryptsetup' 'docbook-xsl' 'gperf' 'lz4' 'xz' 'pam' 'libelf'
             'intltool' 'iptables' 'kmod' 'libcap' 'libidn' 'libgcrypt'
             'libmicrohttpd' 'libxslt' 'util-linux' 'linux-api-headers'
             'python-lxml' 'quota-tools' 'shadow' 'gnu-efi-libs' 'git')
options=('strip' 'docs' 'makeflags')
source=("git://github.com/systemd/systemd.git#tag=v$pkgver"
        'initcpio-hook-udev'
        'initcpio-install-systemd'
        'initcpio-install-udev'
        'udev-hwdb.hook')
md5sums=('SKIP'
         '90ea67a7bb237502094914622a39e281'
         'bee7fd6ccda39582259708e3f262ea6d'
         '1b3aa3a0551b08af9305d33f85b5c2fc'
         'a475a5ed8f03fb0f6b58b4684998d05c')

_backports=(
)

prepare() {
  cd "$pkgbase"

  if (( ${#_backports[*]} > 0 )); then
    git cherry-pick -n "${_backports[@]}"
  fi

  # Prepare the source code
  ./autogen.sh
}

build() {
  cd "$pkgbase"

  # Set ntp time servers
  local timeservers=({0..3}.arch.pool.ntp.org)

  # Set configure arguments
  local configure_options=(
    --libexecdir=/usr/lib
    --localstatedir=/var
    --sysconfdir=/etc    
    --enable-lz4
    --enable-gnuefi
    --disable-audit
    --disable-ima
    --disable-selinux
    --disable-apparmor
    --disable-microhttpd
    --disable-tmpfiles
    --disable-backlight
    --disable-rfkill
    --disable-randomseed
    --disable-quotacheck
    --disable-binfmt
    --disable-vconsole
    --disable-libcurl
    --disable-importd
    --disable-hostnamed
    --disable-timedated
    --disable-timesyncd
    --disable-localed
    --disable-coredump
    --disable-resolved
    --disable-networkd
    --disable-libidn
    --disable-libiptc
    --disable-firstboot
    --disable-efi
    --disable-myhostname
    --disable-hwdb
    --disable-tmpfiles
    --disable-acl
    --disable-smack
    --disable-gcrypt
    --disable-blkid
    --with-sysvinit-path=
    --with-sysvrcnd-path=
    --with-ntp-servers="${timeservers[*]}"
    --with-default-dnssec=no
    --with-dbuspolicydir=/usr/share/dbus-1/system.d
    --without-kill-user-processes
  )

  # Configure the package
  ./configure "${configure_options[@]}"

  # Make the package
  make
}

package_systemd-mini() {
  pkgdesc="system and service manager - minimum"
  license=('GPL2' 'LGPL2.1')
  depends=('acl' 'bash' 'dbus' 'iptables' 'kbd' 'kmod' 'libcap'
           'libsystemd' 'libidn' 'lz4' 'pam' 'libelf' 'libseccomp'
           'util-linux' 'xz')
  provides=("systemd-tools=$pkgver" "udev=$pkgver" "systemd=$pkgver")
  replaces=('systemd-tools' 'udev')
  conflicts=('systemd-tools' 'udev' 'systemd')
  optdepends=('cryptsetup: required for encrypted block devices'
              'systemd-sysvcompat-mini: symlink package to provide sysvinit binaries'
              'polkit: allow administration as unprivileged user')
  backup=(etc/pam.d/systemd-user
          etc/systemd/coredump.conf
          etc/systemd/journald.conf
          etc/systemd/journal-remote.conf
          etc/systemd/journal-upload.conf
          etc/systemd/logind.conf
          etc/systemd/system.conf
          etc/systemd/timesyncd.conf
          etc/systemd/resolved.conf
          etc/systemd/user.conf
          etc/udev/udev.conf
	  var/log/journal)
  install="systemd.install"

  # Install systemd to the right directorys
  make -C "$pkgbase" DESTDIR="$pkgdir" install

  # Don't write units to /etc by default. some of these will be re-enabled on post_install.
  rm -r "$pkgdir/etc/systemd/system/"*.wants

  # Get rid of RPM macros
  rm -r "$pkgdir/usr/lib/rpm"

  # Replace dialout/tape/cdrom group in rules with uucp/storage/optical group
  sed -i 's#GROUP="dialout"#GROUP="uucp"#g;
          s#GROUP="tape"#GROUP="storage"#g;
          s#GROUP="cdrom"#GROUP="optical"#g' "$pkgdir"/usr/lib/udev/rules.d/*.rules 
  sed -i 's/dialout/uucp/g;
          s/tape/storage/g;
          s/cdrom/optical/g' "$pkgdir"/usr/lib/sysusers.d/basic.conf

  # Add mkinitcpio hooks
  install -Dm644 "$srcdir/initcpio-install-systemd" "$pkgdir/usr/lib/initcpio/install/systemd"
  install -Dm644 "$srcdir/initcpio-install-udev" "$pkgdir/usr/lib/initcpio/install/udev"
  install -Dm644 "$srcdir/initcpio-hook-udev" "$pkgdir/usr/lib/initcpio/hooks/udev"

  # Ensure proper permissions for /var/log/journal. This is only to placate
  chown root:systemd-journal "$pkgdir/var/log/journal"
  chmod 2755 "$pkgdir/var/log/journal"

  # Fix pam file
  sed 's|system-auth|system-login|g' -i "$pkgdir/etc/pam.d/systemd-user"

  # Ship default policy to leave services disabled
  echo 'disable *' >"$pkgdir"/usr/lib/systemd/system-preset/99-default.preset

  # Manpages shipped with systemd-sysvcompat
  rm "$pkgdir"/usr/share/man/man8/{telinit,halt,reboot,poweroff,runlevel,shutdown}.8

  # Runtime libraries shipped with libsystemd
  rm "$pkgdir"/usr/lib/lib{nss,systemd,udev}*.so*

  # Add example bootctl configuration
  # install -Dm644 "$srcdir/arch.conf" "$pkgdir"/usr/share/systemd/bootctl/arch.conf
  # install -Dm644 "$srcdir/loader.conf" "$pkgdir"/usr/share/systemd/bootctl/loader.conf
  # install -Dm644 "$srcdir/splash-arch.bmp" "$pkgdir"/usr/share/systemd/bootctl/splash-arch.bmp

  # Install a udev hwdb libalpm hook
  install -Dm644 "$srcdir/udev-hwdb.hook" "$pkgdir/usr/share/libalpm/hooks/udev-hwdb.hook"
}

package_libsystemd-mini() {
  pkgdesc="systemd client libraries - minimum build"
  depends=('glibc' 'libcap' 'libgcrypt' 'lz4' 'xz')
  license=('GPL2')
  provides=('libsystemd.so' 'libudev.so' 'libsystemd')
  conflicts=('libsystemd')

  # Install libsystemd to the right directorys
  make -C "$pkgbase" DESTDIR="$pkgdir" install-libLTLIBRARIES
}

package_systemd-sysvcompat-mini() {
  pkgdesc="sysvinit compat for systemd - minimum build"
  license=('GPL2')
  groups=('base')
  conflicts=('sysvinit' 'systemd-sysvcompat')
  depends=('systemd')
  provides=('systemd-sysvcompat')

  # Install sysvcompat files
  install -dm755 "$pkgdir"/usr/share/man/man8
  cp -d --no-preserve=ownership,timestamp \
    "$pkgbase"/man/{telinit,halt,reboot,poweroff,runlevel,shutdown}.8 \
    "$pkgdir"/usr/share/man/man8

  # Symlink the right files
  install -dm755 "$pkgdir/usr/bin"
  for tool in runlevel reboot shutdown poweroff halt telinit; do
    ln -s 'systemctl' "$pkgdir/usr/bin/$tool"
  done

  ln -s '../lib/systemd/systemd' "$pkgdir/usr/bin/init"
}
